---
interface Props {
  title: string;
  description: string;
  icon: 'graduation-cap' | 'book' | 'heart';
  features: string[];
}

const { title, description, icon, features } = Astro.props;

const iconMap = {
  'graduation-cap': 'lucide:graduation-cap',
  book: 'lucide:book-open',
  heart: 'lucide:heart',
};
---

<div
  class="group border-base-content/20 bg-base-100 hover:border-primary/40 relative overflow-hidden rounded-lg border-2 p-8 transition-all duration-300 hover:shadow-xl"
>
  <!-- Icon -->
  <div
    class="border-base-content/20 bg-base-200 group-hover:border-primary/40 group-hover:bg-primary/10 mb-6 inline-flex items-center justify-center rounded-lg border-2 p-4 transition-all duration-300"
  >
    <iconify-icon
      icon={iconMap[icon]}
      class="text-base-content group-hover:text-primary transition-colors"
      style="font-size: 48px;"></iconify-icon>
  </div>

  <!-- Title -->
  <h3
    class="text-base-content group-hover:text-primary mb-3 text-2xl font-bold transition-colors"
  >
    {title}
  </h3>

  <!-- Description -->
  <p class="text-base-content/70 mb-6 leading-relaxed">
    {description}
  </p>

  <!-- Features List -->
  <ul class="space-y-3">
    {
      features.map((feature) => (
        <li class="flex items-start gap-2">
          <iconify-icon
            icon="lucide:check"
            class="text-primary mt-0.5 shrink-0"
            style="font-size: 20px;"
          />
          <span class="text-base-content/80 text-sm">{feature}</span>
        </li>
      ))
    }
  </ul>

  <!-- Hover Effect Background -->
  <div
    class="bg-primary/5 absolute inset-0 -z-10 opacity-0 transition-opacity duration-300 group-hover:opacity-100"
  >
  </div>
</div>
